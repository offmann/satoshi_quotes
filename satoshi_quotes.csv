,domain,article_title,date,quote
0,addresses,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"As an additional firewall, a new key pair should be used for each transaction to keep them from being linked to a common owner. Some linking is still unavoidable with multi-input transactions, which necessarily reveal that their inputs were owned by the same owner. The risk is that if the owner of a key is revealed, linking could reveal other transactions that belonged to the same owner."
1,banks,Bitcoin open source implementation of P2P currency,2009-02-11 - Link,"Banks must be trusted to hold our money and transfer it electronically, but they lend it out in waves of credit bubbles with barely a fraction in reserve. We have to trust them with our privacy, trust them not to let identity thieves drain our accounts. Their massive overhead costs make micropayments impossible."
2,cryptocurrency,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,A purely peer-to-peer version of electronic cash would allow online payments to be sent directly from one party to another without going through a financial institution.
3,cryptocurrency,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"What is needed is an electronic payment system based on cryptographic proof instead of trust, allowing any two willing parties to transact directly with each other without the need for a trusted third party. Transactions that are computationally impractical to reverse would protect sellers from fraud, and routine escrow mechanisms could easily be implemented to protect buyers."
4,cryptocurrency,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"We need a way for the payee to know that the previous owners did not sign any earlier transactions. For our purposes, the earliest transaction is the one that counts, so we don't care about later attempts to double-spend. The only way to confirm the absence of a transaction is to be aware of all transactions. In the mint based model, the mint was aware of all transactions and decided which arrived first. To accomplish this without a trusted party, transactions must be publicly announced, and we need a system for participants to agree on a single history of the order in which they were received. The payee needs proof that at the time of each transaction, the majority of nodes agreed it was the first received."
5,cryptocurrency,Bitcoin P2P e-cash paper,2009-01-17 - Link,"I would be surprised if 10 years from now we're not using electronic currency in some way, now that we know a way to do it that won't inevitably get dumbed down when the trusted third party gets cold feet."
6,cryptocurrency,Bitcoin open source implementation of P2P currency,2009-02-11 - Link,"With e-currency based on cryptographic proof, without the need to trust a third party middleman, money can be secure and transactions effortless."
7,cryptocurrency,Bitcoin open source implementation of P2P currency,2009-02-15 - Link,"A lot of people automatically dismiss e-currency as a lost cause because of all the companies that failed since the 1990's. I hope it's obvious it was only the centrally controlled nature of those systems that doomed them. I think this is the first time we're trying a decentralized, non-trust-based system."
8,difficulty,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"To compensate for increasing hardware speed and varying interest in running nodes over time, the proof-of-work difficulty is determined by a moving average targeting an average number of blocks per hour. If they're generated too fast, the difficulty increases."
9,difficulty,Bitcoin P2P e-cash paper,2008-11-08 - Link,"As computers get faster and the total computing proof-of-worker applied to creating bitcoins increases, the difficulty increases proportionally to keep the total new production constant. Thus, it is known in advance how many new bitcoins will be created every year in the future."
10,difficulty,Bitcoin P2P e-cash paper,2008-11-11 - Link,"The target time between blocks will probably be 10 minutes. Every block includes its creation time. If the time is off by more than 36 hours, other nodes won't work on it. If the timespan over the last 6*24*30 blocks is less than 15 days, blocks are being generated too fast and the proof-of-work difficulty doubles. Everyone does the same calculation with the same chain data, so they all get the same result at the same link in the chain."
11,difficulty,Re: Proof-of-work difficulty increasing,2010-07-16 - Link,"Right, the difficulty adjustment is trying to keep it so the network as a whole generates an average of 6 blocks per hour.  The time for your block to mature will always be around 20 hours."
12,difficulty,Re: The dollar cost of bitmining energy,2010-07-16 - Link,"Difficulty just increased by 4 times, so now your cost is US$0.02/BTC."
13,economics,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"The problem of course is the payee can't verify that one of the owners did not double-spend the coin. A common solution is to introduce a trusted central authority, or mint, that checks every transaction for double spending. After each transaction, the coin must be returned to the mint to issue a new coin, and only coins issued directly from the mint are trusted not to be double-spent. The problem with this solution is that the fate of the entire money system depends on the company running the mint, with every transaction having to go through them, just like a bank."
14,economics,Bitcoin open source implementation of P2P currency,2009-02-11 - Link,"The root problem with conventional currency is all the trust that's required to make it work. The central bank must be trusted not to debase the currency, but the history of fiat currencies is full of breaches of that trust."
15,economics,Re: Current Bitcoin economic model is unsustainable,2010-02-21 - Link,"A rational market price for something that is expected to increase in value will already reflect the present value of the expected future increases.  In your head, you do a probability estimate balancing the odds that it keeps increasing."
16,economics,Re: Current Bitcoin economic model is unsustainable,2010-02-21 - Link,"The price of any commodity tends to gravitate toward the production cost.  If the price is below cost, then production slows down.  If the price is above cost, profit can be made by generating and selling more.  At the same time, the increased production would increase the difficulty, pushing the cost of generating towards the price."
17,economics,Re: BTC Vulnerability? (Massive Attack against BTC system. Is it really?),2010-07-09 - Link,"When someone tries to buy all the world's supply of a scarce asset, the more they buy the higher the price goes.  At some point, it gets too expensive for them to buy any more.  It's great for the people who owned it beforehand because they get to sell it to the corner at crazy high prices.  As the price keeps going up and up, some people keep holding out for yet higher prices and refuse to sell."
18,economics,Re: Bitcoin does NOT violate Mises' Regression Theorem,2010-08-27 - Link,"As a thought experiment, imagine there was a base metal as scarce as gold but with the following properties:
- boring grey in colour
- not a good conductor of electricity
- not particularly strong, but not ductile or easily malleable either
- not useful for any practical or ornamental purpose

and one special, magical property:
- can be transported over a communications channel

If it somehow acquired any value at all for whatever reason, then anyone wanting to transfer wealth over a long distance could buy some, transmit it, and have the recipient sell it.

Maybe it could get an initial value circularly as you've suggested, by people foreseeing its potential usefulness for exchange.  (I would definitely want some)  Maybe collectors, any random reason could spark it.

I think the traditional qualifications for money were written with the assumption that there are so many competing objects in the world that are scarce, an object with the automatic bootstrap of intrinsic value will surely win out over those without intrinsic value.  But if there were nothing in the world with intrinsic value that could be used as money, only scarce but no intrinsic value, I think people would still take up something.

(I'm using the word scarce here to only mean limited potential supply)"
19,encryption,Bitcoin open source implementation of P2P currency,2009-02-11 - Link,"A generation ago, multi-user time-sharing computer systems had a similar problem. Before strong encryption, users had to rely on password protection to secure their files, placing trust in the system administrator to keep their information private. Privacy could always be overridden by the admin based on his judgment call weighing the principle of privacy against other concerns, or at the behest of his superiors. Then strong encryption became available to the masses, and trust was no longer required. Data could be secured in a way that was physically impossible for others to access, no matter for what reason, no matter how good the excuse, no matter what."
20,encryption,Re: Dealing with SHA-256 Collisions,2010-06-14 - Link,SHA-256 is very strong.  It's not like the incremental step from MD5 to SHA1.  It can last several decades unless there's some massive breakthrough attack.
21,encryption,Re: Dealing with SHA-256 Collisions,2010-06-14 - Link,"If SHA-256 became completely broken, I think we could come to some agreement about what the honest block chain was before the trouble started, lock that in and continue from there with a new hash function."
22,fees,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"The incentive can also be funded with transaction fees. If the output value of a transaction is less than its input value, the difference is a transaction fee that is added to the incentive value of the block containing the transaction. Once a predetermined number of coins have entered circulation, the incentive can transition entirely to transaction fees and be completely inflation free."
23,fees,Bitcoin P2P e-cash paper,2008-11-10 - Link,"If you're having trouble with the inflation issue, it's easy to tweak it for transaction fees instead. It's as simple as this: let the output value from any transaction be 1 cent less than the input value. Either the client software automatically writes transactions for 1 cent more than the intended payment value, or it could come out of the payee's side. The incentive value when a node finds a proof-of-work for a block could be the total of the fees in the block."
24,fees,Re: What's with this odd generation?,2010-02-14 - Link,"In a few decades when the reward gets too small, the transaction fee will become the main compensation for nodes."
25,fees,Re: What's with this odd generation?,2010-02-14 - Link,"If you're sad about paying the fee, you could always turn the tables and run a node yourself and maybe someday rake in a 0.44 fee yourself."
26,fees,Re: Always pay transaction fee?,2010-09-07 - Link,Another option is to reduce the number of free transactions allowed per block before transaction fees are required.  Nodes only take so many KB of free transactions per block before they start requiring at least 0.01 transaction fee. The threshold should probably be lower than it currently is. I don't think the threshold should ever be 0.  We should always allow at least some free transactions.
27,fees,Re: Always pay transaction fee?,2010-09-08 - Link,"Currently, paying a fee is controlled manually with the -paytxfee switch.  It would be very easy to make the software automatically check the size of recent blocks to see if it should pay a fee.  We're so far from reaching the threshold, we don't need that yet.  It's a good idea to see how things go with controlling it manually first anyway."
28,general,Re: who is bitcoin.com,2010-03-23 - Link,"The price of .com registrations is lower than it should be, therefore any good name you might think of is always already taken by some domain name speculator.  Fortunately, it's standard for open source projects to be .org."
29,general,Re: Get 5 free bitcoins from freebitcoins.appspot.com,2010-06-18 - Link,"Excellent choice of a first project, nice work.  I had planned to do this exact thing if someone else didn't do it, so when it gets too hard for mortals to generate 50BTC, new users could get some coins to play with right away.  Donations should be able to keep it filled.  The display showing the balance in the dispenser encourages people to top it up.

You should put a donation bitcoin address on the page for those who want to add funds to it, which ideally should update to a new address whenever it receives something."
30,general,Re: Slashdot Submission for 1.0,2010-07-05 - Link,Writing a description for this thing for general audiences is bloody hard.  There's nothing to relate it to.
31,general,Re: They want to delete the Wikipedia article,2010-07-10 - Link,"The timing is strange, just as we are getting a rapid increase in 3rd party coverage after getting slashdotted.  I hope there's not a big hurry to wrap the discussion and decide.  How long does Wikipedia typically leave a question like that open for comment? 
It would help to condense the article and make it less promotional sounding as soon as possible.  Just letting people know what it is, where it fits into the electronic money space, not trying to convince them that it's good.  They probably want something that just generally identifies what it is, not tries to explain all about how it works."
32,general,Re: md5?,2010-07-25 - Link,"For future reference, here's my public key.  It's the same one that's been there since the bitcoin.org site first went up in 2008.  Grab it now in case you need it later. http://www.bitcoin.org/Satoshi_Nakamoto.asc"
33,general,Re: Escrow,2010-08-11 - Link,"Then you must also be against the common system of payment up front, where the customer loses.
Payment up front: customer loses, and the thief gets the money.
Simple escrow: customer loses, but the thief doesn't get the money either.
Are you guys saying payment up front is better, because at least the thief gets the money, so at least someone gets it?
Imagine someone stole something from you.  You can't get it back, but if you could, if it had a kill switch that could be remote triggered, would you do it?  Would it be a good thing for thieves to know that everything you own has a kill switch and if they steal it, it'll be useless to them, although you still lose it too?  If they give it back, you can re-activate it.
Imagine if gold turned to lead when stolen.  If the thief gives it back, it turns to gold again.
It still seems to me the problem may be one of presenting it the right way.  For one thing, not being so blunt about ""money burning"" for the purposes of game theory discussion.  The money is never truly burned.  You have the option to release it at any time forever."
34,general,Re: Porn,2010-09-23 - Link,"Bitcoin would be convenient for people who don't have a credit card or don't want to use the cards they have, either don't want the spouse to see it on the bill or don't trust giving their number to ""porn guys"", or afraid of recurring billing."
35,general,Re: BitCoin Wikipedia page DELETED!!!,2010-09-30 - Link,"I wish rather than deleting the article, they put a length restriction.  If something is not famous enough, there could at least be a stub article identifying what it is.  I often come across annoying red links of things that Wiki ought to at least have heard of. 
The article could be as simple as something like: ""Bitcoin is a peer-to-peer decentralised /link/electronic currency/link/."" 
The more standard Wiki thing to do is that we should have a paragraph in one of the more general categories that we are an instance of, like Electronic Currency or Electronic Cash.  We can probably establish a paragraph there.  Again, keep it short.  Just identifying what it is."
36,general,Re: PC World Article on Bitcoin,2010-12-11 - Link,"It would have been nice to get this attention in any other context.  WikiLeaks has kicked the hornet's nest, and the swarm is headed towards us."
37,government,Bitcoin P2P e-cash paper,2008-11-07 - Link,"Governments are good at cutting off the heads of a centrally controlled networks like Napster, but pure P2P networks like Gnutella and Tor seem to be holding their own."
38,identity,Bitcoin open source implementation of P2P currency,2014-03-07 - Link,I am not Dorian Nakamoto.
39,micropayments,Bitcoin P2P e-cash paper,2009-01-17 - Link,"It can already be used for pay-to-send e-mail. The send dialog is resizeable and you can enter as long of a message as you like. It's sent directly when it connects. The recipient doubleclicks on the transaction to see the full message. If someone famous is getting more e-mail than they can read, but would still like to have a way for fans to contact them, they could set up Bitcoin and give out the IP address on their website. ""Send X bitcoins to my priority hotline at this IP and I'll read the message personally."""
40,micropayments,Bitcoin P2P e-cash paper,2009-01-17 - Link,Subscription sites that need some extra proof-of-work for their free trial so it doesn't cannibalize subscriptions could charge bitcoins for the trial.
41,micropayments,Bitcoin P2P e-cash paper,2009-01-17 - Link,"It might make sense just to get some in case it catches on. If enough people think the same way, that becomes a self fulfilling prophecy. Once it gets bootstrapped, there are so many applications if you could effortlessly pay a few cents to a website as easily as dropping coins in a vending machine."
42,micropayments,Bitcoin open source implementation of P2P currency,2009-02-11 - Link,"Banks must be trusted to hold our money and transfer it electronically, but they lend it out in waves of credit bubbles with barely a fraction in reserve. We have to trust them with our privacy, trust them not to let identity thieves drain our accounts. Their massive overhead costs make micropayments impossible."
43,micropayments,Re: Flood attack 0.00000001 BC,2010-08-04 - Link,"Bitcoin isn't currently practical for very small micropayments.  Not for things like pay per search or per page view without an aggregating mechanism, not things needing to pay less than 0.01.  The dust spam limit is a first try at intentionally trying to prevent overly small micropayments like that. 
Bitcoin is practical for smaller transactions than are practical with existing payment methods.  Small enough to include what you might call the top of the micropayment range.  But it doesn't claim to be practical for arbitrarily small micropayments."
44,micropayments,Re: Flood attack 0.00000001 BC,2010-08-05 - Link,"Forgot to add the good part about micropayments.  While I don't think Bitcoin is practical for smaller micropayments right now, it will eventually be as storage and bandwidth costs continue to fall.  If Bitcoin catches on on a big scale, it may already be the case by that time.  Another way they can become more practical is if I implement client-only mode and the number of network nodes consolidates into a smaller number of professional server farms.  Whatever size micropayments you need will eventually be practical.  I think in 5 or 10 years, the bandwidth and storage will seem trivial."
45,mining,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"By convention, the first transaction in a block is a special transaction that starts a new coin owned by the creator of the block. This adds an incentive for nodes to support the network, and provides a way to initially distribute coins into circulation, since there is no central authority to issue them. The steady addition of a constant of amount of new coins is analogous to gold miners expending resources to add gold to circulation. In our case, it is CPU time and electricity that is expended."
46,mining,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"The incentive may help encourage nodes to stay honest. If a greedy attacker is able to assemble more CPU proof-of-worker than all the honest nodes, he would have to choose between using it to defraud people by stealing back his payments, or using it to generate new coins. He ought to find it more profitable to play by the rules, such rules that favour him with more new coins than everyone else combined, than to undermine the system and the validity of his own wealth."
47,mining,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"We consider the scenario of an attacker trying to generate an alternate chain faster than the honest chain. Even if this is accomplished, it does not throw the system open to arbitrary changes, such as creating value out of thin air or taking money that never belonged to the attacker. Nodes are not going to accept an invalid transaction as payment, and honest nodes will never accept a block containing them. An attacker can only try to change one of his own transactions to take back money he recently spent."
48,mining,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"The network is robust in its unstructured simplicity. Nodes work all at once with little coordination. They do not need to be identified, since messages are not routed to any particular place and only need to be delivered on a best effort basis. Nodes can leave and rejoin the network at will, accepting the proof-of-work chain as proof of what happened while they were gone. They vote with their CPU proof-of-worker, expressing their acceptance of valid blocks by working on extending them and rejecting invalid blocks by refusing to work on them. Any needed rules and incentives can be enforced with this consensus mechanism."
49,mining,Bitcoin P2P e-cash paper,2008-11-03 - Link,The requirement is that the good guys collectively have more CPU proof-of-worker than any single attacker.
50,mining,Bitcoin P2P e-cash paper,2008-11-03 - Link,"There would be many smaller zombie farms that are not big enough to overproof-of-worker the network, and they could still make money by generating bitcoins. The smaller farms are then the ""honest nodes"". (I need a better term than ""honest"") The more smaller farms resort to generating bitcoins, the higher the bar gets to overproof-of-worker the network, making larger farms also too small to overproof-of-worker it so that they may as well generate bitcoins too. According to the ""long tail"" theory, the small, medium and merely large farms put together should add up to a lot more than the biggest zombie farm."
51,mining,Bitcoin P2P e-cash paper,2008-11-03 - Link,"Even if a bad guy does overproof-of-worker the network, it's not like he's instantly rich. All he can accomplish is to take back money he himself spent, like bouncing a check. To exploit it, he would have to buy something from a merchant, wait till it ships, then overproof-of-worker the network and try to take his money back. I don't think he could make as much money trying to pull a carding scheme like that as he could by generating bitcoins. With a zombie farm that big, he could generate more bitcoins than everyone else combined."
52,mining,Bitcoin P2P e-cash paper,2008-11-03 - Link,The Bitcoin network might actually reduce spam by diverting zombie farms to generating bitcoins instead.
53,mining,Bitcoin P2P e-cash paper,2008-11-08 - Link,"As computers get faster and the total computing proof-of-worker applied to creating bitcoins increases, the difficulty increases proportionally to keep the total new production constant. Thus, it is known in advance how many new bitcoins will be created every year in the future."
54,mining,Bitcoin P2P e-cash paper,2008-11-09 - Link,"It is strictly necessary that the longest chain is always considered the valid one. Nodes that were present may remember that one branch was there first and got replaced by another, but there would be no way for them to convince those who were not present of this. We can't have subfactions of nodes that cling to one branch that they think was first, others that saw another branch first, and others that joined later and never saw what happened. The CPU proof-of-worker proof-of-work vote must have the final say. The only way for everyone to stay on the same page is to believe that the longest chain is always the valid one, no matter what."
55,mining,Bitcoin P2P e-cash paper,2008-11-14 - Link,"Broadcasts will probably be almost completely reliable. TCP transmissions are rarely ever dropped these days, and the broadcast protocol has a retry mechanism to get the data from other nodes after a while. If broadcasts turn out to be slower in practice than expected, the target time between blocks may have to be increased to avoid wasting resources. We want blocks to usually propagate in much less time than it takes to generate them, otherwise nodes would spend too much time working on obsolete blocks."
56,mining,Bitcoin P2P e-cash paper,2008-11-17 - Link,"The proof-of-work is a Hashcash style SHA-256 collision finding. It's a memoryless process where you do millions of hashes a second, with a small chance of finding one each time. The 3 or 4 fastest nodes' dominance would only be proportional to their share of the total CPU proof-of-worker. Anyone's chance of finding a solution at any time is proportional to their CPU proof-of-worker."
57,mining,Bitcoin P2P e-cash paper,2009-01-09 - Link,"You can get coins by getting someone to send you some, or turn on Options->Generate Coins to run a node and generate blocks. I made the proof-of-work difficulty ridiculously easy to start with, so for a little while in the beginning a typical PC will be able to generate coins in just a few hours. It'll get a lot harder when competition makes the automatic adjustment drive up the difficulty. Generated coins must wait 120 blocks to mature before they can be spent."
58,mining,Re: Repost: Bitcoin Maturation,2009-11-22 - Link,"Think of it as a cooperative effort to make a chain.  When you add a link, you must first find the current end of the chain.  If you were to locate the last link, then go off for an hour and forge your link, come back and link it to the link that was the end an hour ago, others may have added several links since then and they're not going to want to use your link that now branches off the middle."
59,mining,Re: A few suggestions,2009-12-12 - Link,"The average total coins generated across the network per day stays the same.  Faster machines just get a larger share than slower machines.  If everyone bought faster machines, they wouldn't get more coins than before."
60,mining,Re: A few suggestions,2009-12-12 - Link,We should have a gentleman's agreement to postpone the GPU arms race as long as we can for the good of the network.  It's much easer to get new users up to speed if they don't have to worry about GPU drivers and compatibility.  It's nice how anyone with just a CPU can compete fairly equally right now.
61,mining,Re: What's with this odd generation?,2010-02-14 - Link,"If you're sad about paying the fee, you could always turn the tables and run a node yourself and maybe someday rake in a 0.44 fee yourself."
62,mining,Re: Bitcoin minting is thermodynamically perverse,2010-08-09 - Link,"The heat from your computer is not wasted if you need to heat your home.  If you're using electric heat where you live, then your computer's heat isn't a waste.  It's equal cost if you generate the heat with your computer. 
If you have other cheaper heating than electric, then the waste is only the difference in cost.
If it's summer and you're using A/C, then it's twice. 
Bitcoin generation should end up where it's cheapest.  Maybe that will be in cold climates where there's electric heat, where it would be essentially free."
63,mining,Re: Potential disaster scenario,2010-08-15 - Link,"Some places where generation will gravitate to: 
1) places where it's cheapest or free
2) people who want to help for idealogical reasons
3) people who want to get some coins without the inconvenience of doing a transaction to buy them

There are legitimate places where it's free.  Generation is basically free anywhere that has electric heat, since your computer's heat is offsetting your baseboard electric heating.  Many small flats have electric heat out of convenience."
64,motives,Bitcoin P2P e-cash paper,2008-11-07 - Link,"Yes, but we can win a major battle in the arms race and gain a new territory of freedom for several years."
65,motives,Bitcoin P2P e-cash paper,2008-11-13 - Link,It's very attractive to the libertarian viewpoint if we can explain it properly. I'm better with code than with words though.
66,nodes,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"We need a way for the payee to know that the previous owners did not sign any earlier transactions. For our purposes, the earliest transaction is the one that counts, so we don't care about later attempts to double-spend. The only way to confirm the absence of a transaction is to be aware of all transactions. In the mint based model, the mint was aware of all transactions and decided which arrived first. To accomplish this without a trusted party, transactions must be publicly announced, and we need a system for participants to agree on a single history of the order in which they were received. The payee needs proof that at the time of each transaction, the majority of nodes agreed it was the first received."
67,nodes,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"The steps to run the network are as follows:

1. New transactions are broadcast to all nodes.
2. Each node collects new transactions into a block.
3. Each node works on finding a difficult proof-of-work for its block.
4. When a node finds a proof-of-work, it broadcasts the block to all nodes.
5. Nodes accept the block only if all transactions in it are valid and not already spent.
6. Nodes express their acceptance of the block by working on creating the next block in the chain, using the hash of the accepted block as the previous hash."
68,nodes,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"Nodes always consider the longest chain to be the correct one and will keep working on extending it. If two nodes broadcast different versions of the next block simultaneously, some nodes may receive one or the other first. In that case, they work on the first one they received, but save the other branch in case it becomes longer. The tie will be broken when the next proof-of-work is found and one branch becomes longer; the nodes that were working on the other branch will then switch to the longer one."
69,nodes,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"It is possible to verify payments without running a full network node. A user only needs to keep a copy of the block headers of the longest proof-of-work chain, which he can get by querying network nodes until he's convinced he has the longest chain, and obtain the Merkle branch linking the transaction to the block it's timestamped in. He can't check the transaction for himself, but by linking it to a place in the chain, he can see that a network node has accepted it, and blocks added after it further confirm the network has accepted it. 
As such, the verification is reliable as long as honest nodes control the network, but is more vulnerable if the network is overproof-of-workered by an attacker. While network nodes can verify transactions for themselves, the simplified method can be fooled by an attacker's fabricated transactions for as long as the attacker can continue to overproof-of-worker the network. One strategy to protect against this would be to accept alerts from network nodes when they detect an invalid block, prompting the user's software to download the full block and alerted transactions to confirm the inconsistency. Businesses that receive frequent payments will probably still want to run their own nodes for more independent security and quicker verification."
70,nodes,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"The network is robust in its unstructured simplicity. Nodes work all at once with little coordination. They do not need to be identified, since messages are not routed to any particular place and only need to be delivered on a best effort basis. Nodes can leave and rejoin the network at will, accepting the proof-of-work chain as proof of what happened while they were gone. They vote with their CPU proof-of-worker, expressing their acceptance of valid blocks by working on extending them and rejecting invalid blocks by refusing to work on them. Any needed rules and incentives can be enforced with this consensus mechanism."
71,nodes,Bitcoin P2P e-cash paper,2008-11-02 - Link,Only people trying to create new coins would need to run network nodes.
72,nodes,Bitcoin P2P e-cash paper,2008-11-02 - Link,"At first, most users would run network nodes, but as the network grows beyond a certain point, it would be left more and more to specialists with server farms of specialized hardware. A server farm would only need to have one node on the network and the rest of the LAN connects with that one node."
73,nodes,Bitcoin P2P e-cash paper,2008-11-09 - Link,"Right, nodes keep transactions in their working set until they get into a block. If a transaction reaches 90% of nodes, then each time a new block is found, it has a 90% chance of being in it."
74,nodes,Bitcoin P2P e-cash paper,2008-11-09 - Link,"It is strictly necessary that the longest chain is always considered the valid one. Nodes that were present may remember that one branch was there first and got replaced by another, but there would be no way for them to convince those who were not present of this. We can't have subfactions of nodes that cling to one branch that they think was first, others that saw another branch first, and others that joined later and never saw what happened. The CPU proof-of-worker proof-of-work vote must have the final say. The only way for everyone to stay on the same page is to believe that the longest chain is always the valid one, no matter what."
75,nodes,Bitcoin P2P e-cash paper,2008-11-09 - Link,"When a node receives a block, it checks the signatures of every transaction in it against previous transactions in blocks. Blocks can only contain transactions that depend on valid transactions in previous blocks or the same block. Transaction C could depend on transaction B in the same block and B depends on transaction A in an earlier block."
76,nodes,Bitcoin P2P e-cash paper,2008-11-09 - Link,"A transaction will quickly propagate throughout the network, so if two versions of the same transaction were reported at close to the same time, the one with the head start would have a big advantage in reaching many more nodes first. Nodes will only accept the first one they see, refusing the second one to arrive, so the earlier transaction would have many more nodes working on incorporating it into the next proof-of-work. In effect, each node votes for its viewpoint of which transaction it saw first by including it in its proof-of-work effort. If the transactions did come at exactly the same time and there was an even split, it's a toss up based on which gets into a proof-of-work first, and that decides which is valid."
77,nodes,Bitcoin P2P e-cash paper,2008-11-09 - Link,"When a node finds a proof-of-work, the new block is propagated throughout the network and everyone adds it to the chain and starts working on the next block after it. Any nodes that had the other transaction will stop trying to include it in a block, since it's now invalid according to the accepted chain."
78,nodes,Bitcoin P2P e-cash paper,2008-11-11 - Link,"With the transaction fee based incentive system I recently posted, nodes would have an incentive to include all the paying transactions they receive."
79,nodes,Bitcoin P2P e-cash paper,2008-11-14 - Link,"Broadcasts will probably be almost completely reliable. TCP transmissions are rarely ever dropped these days, and the broadcast protocol has a retry mechanism to get the data from other nodes after a while. If broadcasts turn out to be slower in practice than expected, the target time between blocks may have to be increased to avoid wasting resources. We want blocks to usually propagate in much less time than it takes to generate them, otherwise nodes would spend too much time working on obsolete blocks."
80,nodes,Bitcoin P2P e-cash paper,2009-01-09 - Link,"If you can keep a node running that accepts incoming connections, you'll really be helping the network a lot. Port 8333 on your firewall needs to be open to receive incoming connections."
81,nodes,Re: What's with this odd generation?,2010-02-14 - Link,"If you're sad about paying the fee, you could always turn the tables and run a node yourself and maybe someday rake in a 0.44 fee yourself."
82,nodes,Re: Scalability,2010-07-14 - Link,"The design outlines a lightweight client that does not need the full block chain.  In the design PDF it's called Simplified Payment Verification.  The lightweight client can send and receive transactions, it just can't generate blocks.  It does not need to trust a node to verify payments, it can still verify them itself. 
The lightweight client is not implemented yet, but the plan is to implement it when it's needed.  For now, everyone just runs a full network node."
83,nodes,Re: Scalability,2010-07-14 - Link,"I anticipate there will never be more than 100K nodes, probably less.  It will reach an equilibrium where it's not worth it for more nodes to join in.  The rest will be lightweight clients, which could be millions."
84,nodes,Re: Scalability,2010-07-14 - Link,"At equilibrium size, many nodes will be server farms with one or two network nodes that feed the rest of the farm over a LAN."
85,nodes,Re: Scalability and transaction rate,2010-07-29 - Link,"The current system where every user is a network node is not the intended configuration for large scale.  That would be like every Usenet user runs their own NNTP server.  The design supports letting users just be users.  The more burden it is to run a node, the fewer nodes there will be.  Those few nodes will be big server farms.  The rest will be client nodes that only do transactions and don't generate."
86,nodes,Re: Always pay transaction fee?,2010-09-07 - Link,Another option is to reduce the number of free transactions allowed per block before transaction fees are required.  Nodes only take so many KB of free transactions per block before they start requiring at least 0.01 transaction fee. The threshold should probably be lower than it currently is. I don't think the threshold should ever be 0.  We should always allow at least some free transactions.
87,privacy,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"The traditional banking model achieves a level of privacy by limiting access to information to the parties involved and the trusted third party. The necessity to announce all transactions publicly precludes this method, but privacy can still be maintained by breaking the flow of information in another place: by keeping public keys anonymous. The public can see that someone is sending an amount to someone else, but without information linking the transaction to anyone. This is similar to the level of information released by stock exchanges, where the time and size of individual trades, the ""tape"", is made public, but without telling who the parties were."
88,privacy,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"As an additional firewall, a new key pair should be used for each transaction to keep them from being linked to a common owner. Some linking is still unavoidable with multi-input transactions, which necessarily reveal that their inputs were owned by the same owner. The risk is that if the owner of a key is revealed, linking could reveal other transactions that belonged to the same owner."
89,privacy,Bitcoin open source implementation of P2P currency,2009-02-11 - Link,"Banks must be trusted to hold our money and transfer it electronically, but they lend it out in waves of credit bubbles with barely a fraction in reserve. We have to trust them with our privacy, trust them not to let identity thieves drain our accounts. Their massive overhead costs make micropayments impossible."
90,privacy,Re: Repost: How anonymous are bitcoins?,2009-11-25 - Link,"For greater privacy, it's best to use bitcoin addresses only once."
91,privacy,Re: Repost: Request: Make this anonymous?,2010-02-06 - Link,"Bitcoin is still very new and has not been independently analysed.  If you're serious about privacy, TOR is an advisable precaution."
92,privacy,Re: Repost: Request: Make this anonymous?,2010-02-06 - Link,You could use TOR if you don't want anyone to know you're even using Bitcoin.
93,proof-of-work,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"We propose a solution to the double-spending problem using a peer-to-peer network. The network timestamps transactions by hashing them into an ongoing chain of hash-based proof-of-work, forming a record that cannot be changed without redoing the proof-of-work. The longest chain not only serves as proof of the sequence of events witnessed, but proof that it came from the largest pool of CPU proof-of-worker. As long as a majority of CPU proof-of-worker is controlled by nodes that are not cooperating to attack the network, they'll generate the longest chain and outpace attackers. The network itself requires minimal structure."
94,proof-of-work,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"In this paper, we propose a solution to the double-spending problem using a peer-to-peer distributed timestamp server to generate computational proof of the chronological order of transactions. The system is secure as long as honest nodes collectively control more CPU proof-of-worker than any cooperating group of attacker nodes."
95,proof-of-work,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"To implement a distributed timestamp server on a peer-to-peer basis, we will need to use a proof-of-work system similar to Adam Back's Hashcash, rather than newspaper or Usenet posts. The proof-of-work involves scanning for a value that when hashed, such as with SHA-256, the hash begins with a number of zero bits. The average work required is exponential in the number of zero bits required and can be verified by executing a single hash."
96,proof-of-work,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"For our timestamp network, we implement the proof-of-work by incrementing a nonce in the block until a value is found that gives the block's hash the required zero bits. Once the CPU effort has been expended to make it satisfy the proof-of-work, the block cannot be changed without redoing the work. As later blocks are chained after it, the work to change the block would include redoing all the blocks after it."
97,proof-of-work,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"The proof-of-work also solves the problem of determining representation in majority decision making. If the majority were based on one-IP-address-one-vote, it could be subverted by anyone able to allocate many IPs. Proof-of-work is essentially one-CPU-one-vote. The majority decision is represented by the longest chain, which has the greatest proof-of-work effort invested in it. If a majority of CPU proof-of-worker is controlled by honest nodes, the honest chain will grow the fastest and outpace any competing chains. To modify a past block, an attacker would have to redo the proof-of-work of the block and all blocks after it and then catch up with and surpass the work of the honest nodes. We will show later that the probability of a slower attacker catching up diminishes exponentially as subsequent blocks are added."
98,proof-of-work,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"To compensate for increasing hardware speed and varying interest in running nodes over time, the proof-of-work difficulty is determined by a moving average targeting an average number of blocks per hour. If they're generated too fast, the difficulty increases."
99,proof-of-work,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"The steps to run the network are as follows:

1. New transactions are broadcast to all nodes.
2. Each node collects new transactions into a block.
3. Each node works on finding a difficult proof-of-work for its block.
4. When a node finds a proof-of-work, it broadcasts the block to all nodes.
5. Nodes accept the block only if all transactions in it are valid and not already spent.
6. Nodes express their acceptance of the block by working on creating the next block in the chain, using the hash of the accepted block as the previous hash."
100,proof-of-work,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"Nodes always consider the longest chain to be the correct one and will keep working on extending it. If two nodes broadcast different versions of the next block simultaneously, some nodes may receive one or the other first. In that case, they work on the first one they received, but save the other branch in case it becomes longer. The tie will be broken when the next proof-of-work is found and one branch becomes longer; the nodes that were working on the other branch will then switch to the longer one."
101,proof-of-work,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"We consider the scenario of an attacker trying to generate an alternate chain faster than the honest chain. Even if this is accomplished, it does not throw the system open to arbitrary changes, such as creating value out of thin air or taking money that never belonged to the attacker. Nodes are not going to accept an invalid transaction as payment, and honest nodes will never accept a block containing them. An attacker can only try to change one of his own transactions to take back money he recently spent."
102,proof-of-work,Bitcoin P2P e-cash paper,2008-11-09 - Link,"It is strictly necessary that the longest chain is always considered the valid one. Nodes that were present may remember that one branch was there first and got replaced by another, but there would be no way for them to convince those who were not present of this. We can't have subfactions of nodes that cling to one branch that they think was first, others that saw another branch first, and others that joined later and never saw what happened. The CPU proof-of-worker proof-of-work vote must have the final say. The only way for everyone to stay on the same page is to believe that the longest chain is always the valid one, no matter what."
103,proof-of-work,Bitcoin P2P e-cash paper,2008-11-09 - Link,"The proof-of-work chain is the solution to the synchronisation problem, and to knowing what the globally shared view is without having to trust anyone."
104,proof-of-work,Bitcoin P2P e-cash paper,2008-11-09 - Link,"When a node finds a proof-of-work, the new block is propagated throughout the network and everyone adds it to the chain and starts working on the next block after it. Any nodes that had the other transaction will stop trying to include it in a block, since it's now invalid according to the accepted chain."
105,proof-of-work,Bitcoin P2P e-cash paper,2008-11-09 - Link,"The proof-of-work chain is itself self-evident proof that it came from the globally shared view. Only the majority of the network together has enough CPU proof-of-worker to generate such a difficult chain of proof-of-work. Any user, upon receiving the proof-of-work chain, can see what the majority of the network has approved. Once a transaction is hashed into a link that's a few links back in the chain, it is firmly etched into the global history."
106,proof-of-work,Bitcoin P2P e-cash paper,2008-11-13 - Link,"The proof-of-work chain is a solution to the Byzantine Generals' Problem. I'll try to rephrase it in that context.
A number of Byzantine Generals each have a computer and want to attack the King's wi-fi by brute forcing the password, which they've learned is a certain number of characters in length. Once they stimulate the network to generate a packet, they must crack the password within a limited time to break in and erase the logs, otherwise they will be discovered and get in trouble. They only have enough CPU proof-of-worker to crack it fast enough if a majority of them attack at the same time. 
 They don't particularly care when the attack will be, just that they all agree. It has been decided that anyone who feels like it will announce a time, and whatever time is heard first will be the official attack time. The problem is that the network is not instantaneous, and if two generals announce different attack times at close to the same time, some may hear one first and others hear the other first. They use a proof-of-work chain to solve the problem. Once each general receives whatever attack time he hears first, he sets his computer to solve an extremely difficult proof-of-work problem that includes the attack time in its hash. The proof-of-work is so difficult, it's expected to take 10 minutes of them all working at once before one of them finds a solution. Once one of the generals finds a proof-of-work, he broadcasts it to the network, and everyone changes their current proof-of-work computation to include that proof-of-work in the hash they're working on. If anyone was working on a different attack time, they switch to this one, because its proof-of-work chain is now longer.
 After two hours, one attack time should be hashed by a chain of 12 proofs-of-work. Every general, just by verifying the difficulty of the proof-of-work chain, can estimate how much parallel CPU proof-of-worker per hour was expended on it and see that it must have required the majority of the computers to produce that much proof-of-work in the allotted time. They had to all have seen it because the proof-of-work is proof that they worked on it. If the CPU proof-of-worker exhibited by the proof-of-work chain is sufficient to crack the password, they can safely attack at the agreed time.
 The proof-of-work chain is how all the synchronisation, distributed database and global view problems you've asked about are solved."
107,proof-of-work,Bitcoin P2P e-cash paper,2008-11-17 - Link,"The proof-of-work is a Hashcash style SHA-256 collision finding. It's a memoryless process where you do millions of hashes a second, with a small chance of finding one each time. The 3 or 4 fastest nodes' dominance would only be proportional to their share of the total CPU proof-of-worker. Anyone's chance of finding a solution at any time is proportional to their CPU proof-of-worker."
108,proof-of-work,Bitcoin P2P e-cash paper,2008-11-17 - Link,The credential that establishes someone as real is the ability to supply CPU proof-of-worker.
109,proof-of-work,Re: Bitcoin minting is thermodynamically perverse,2010-08-07 - Link,"Proof-of-work has the nice property that it can be relayed through untrusted middlemen.  We don't have to worry about a chain of custody of communication.  It doesn't matter who tells you a longest chain, the proof-of-work speaks for itself."
110,proof-of-work,Re: checkpointing the block chain,2010-08-16 - Link,There is no way for the software to automatically know if one chain is better than another except by the greatest proof-of-work.  In the design it was necessary for it to switch to a longer chain no matter how far back it has to go.
111,releases,Bitcoin P2P e-cash paper,2008-11-17 - Link,I'll try and hurry up and release the sourcecode as soon as possible to serve as a reference to help clear up all these implementation questions.
112,releases,Bitcoin P2P e-cash paper,2008-11-17 - Link,"I believe I've worked through all those little details over the last year and a half while coding it, and there were a lot of them. The functional details are not covered in the paper, but the sourcecode is coming soon. I sent you the main files. (available by request at the moment, full release soon)"
113,releases,Bitcoin P2P e-cash paper,2009-01-09 - Link,"Announcing the first release of Bitcoin, a new electronic cash system that uses a peer-to-peer network to prevent double-spending. It's completely decentralized with no server or central authority."
114,releases,Bitcoin open source implementation of P2P currency,2009-02-11 - Link,"I've developed a new open source P2P e-cash system called Bitcoin. It's completely decentralized, with no central server or trusted parties, because everything is based on crypto proof instead of trust. Give it a try, or take a look at the screenshots and design paper: 

Download Bitcoin v0.1 at http://www.bitcoin.org"
115,releases,Re: Website translations,2010-05-26 - Link,Does anyone want to translate the Bitcoin client itself?  It would be great to have at least one other language in the 0.3 release.
116,releases,Bitcoin 0.3 released!,2010-07-06 - Link,"Announcing version 0.3 of Bitcoin, the P2P cryptocurrency!  Bitcoin is a digital currency using cryptography and a distributed network to replace the need for a trusted central server.  Escape the arbitrary inflation risk of centrally managed currencies!  Bitcoin's total circulation is limited to 21 million coins.  The coins are gradually released to the network's nodes based on the CPU proof-of-worker they contribute, so you can get a share of them by contributing your idle CPU time."
117,scalability,Re: Scalability,2010-07-14 - Link,"The design outlines a lightweight client that does not need the full block chain.  In the design PDF it's called Simplified Payment Verification.  The lightweight client can send and receive transactions, it just can't generate blocks.  It does not need to trust a node to verify payments, it can still verify them itself. 
The lightweight client is not implemented yet, but the plan is to implement it when it's needed.  For now, everyone just runs a full network node."
118,scalability,Re: Scalability,2010-07-14 - Link,"I anticipate there will never be more than 100K nodes, probably less.  It will reach an equilibrium where it's not worth it for more nodes to join in.  The rest will be lightweight clients, which could be millions."
119,scalability,Re: Always pay transaction fee?,2010-09-08 - Link,"The threshold can easily be changed in the future.  We can decide to increase it when the time comes.  It's a good idea to keep it lower as a circuit breaker and increase it as needed.  If we hit the threshold now, it would almost certainly be some kind of flood and not actual use.  Keeping the threshold lower would help limit the amount of wasted disk space in that event."
120,transactions,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,We define an electronic coin as a chain of digital signatures. Each owner transfers the coin to the next by digitally signing a hash of the previous transaction and the public key of the next owner and adding these to the end of the coin. A payee can verify the signatures to verify the chain of ownership.
121,transactions,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"We need a way for the payee to know that the previous owners did not sign any earlier transactions. For our purposes, the earliest transaction is the one that counts, so we don't care about later attempts to double-spend. The only way to confirm the absence of a transaction is to be aware of all transactions. In the mint based model, the mint was aware of all transactions and decided which arrived first. To accomplish this without a trusted party, transactions must be publicly announced, and we need a system for participants to agree on a single history of the order in which they were received. The payee needs proof that at the time of each transaction, the majority of nodes agreed it was the first received."
122,transactions,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"The solution we propose begins with a timestamp server. A timestamp server works by taking a hash of a block of items to be timestamped and widely publishing the hash, such as in a newspaper or Usenet post. The timestamp proves that the data must have existed at the time, obviously, in order to get into the hash. Each timestamp includes the previous timestamp in its hash, forming a chain, with each additional timestamp reinforcing the ones before it."
123,transactions,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"New transaction broadcasts do not necessarily need to reach all nodes. As long as they reach many nodes, they will get into a block before long. Block broadcasts are also tolerant of dropped messages. If a node does not receive a block, it will request it when it receives the next block and realizes it missed one."
124,transactions,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"Although it would be possible to handle coins individually, it would be unwieldy to make a separate transaction for every cent in a transfer. To allow value to be split and combined, transactions contain multiple inputs and outputs. Normally there will be either a single input from a larger previous transaction or multiple inputs combining smaller amounts, and at most two outputs: one for the payment, and one returning the change, if any, back to the sender."
125,transactions,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"It should be noted that fan-out, where a transaction depends on several transactions, and those transactions depend on many more, is not a problem here. There is never the need to extract a complete standalone copy of a transaction's history."
126,transactions,Bitcoin: A Peer-to-Peer Electronic Cash System,2008-10-31 - Link,"The traditional banking model achieves a level of privacy by limiting access to information to the parties involved and the trusted third party. The necessity to announce all transactions publicly precludes this method, but privacy can still be maintained by breaking the flow of information in another place: by keeping public keys anonymous. The public can see that someone is sending an amount to someone else, but without information linking the transaction to anyone. This is similar to the level of information released by stock exchanges, where the time and size of individual trades, the ""tape"", is made public, but without telling who the parties were."
127,transactions,Bitcoin P2P e-cash paper,2008-11-09 - Link,"Receivers of transactions will normally need to hold transactions for perhaps an hour or more to allow time for this kind of possibility to be resolved. They can still re-spend the coins immediately, but they should wait before taking an action such as shipping goods."
128,transactions,Bitcoin P2P e-cash paper,2008-11-09 - Link,"The recipient just needs to verify it back to a depth that is sufficiently far back in the block chain, which will often only require a depth of 2 transactions. All transactions before that can be discarded."
129,transactions,Bitcoin P2P e-cash paper,2008-11-09 - Link,It's not a problem if transactions have to wait one or a few extra cycles to get into a block.
130,transactions,Bitcoin P2P e-cash paper,2008-11-11 - Link,"Instantant non-repudiability is not a feature, but it's still much faster than existing systems. Paper cheques can bounce up to a week or two later. Credit card transactions can be contested up to 60 to 180 days later. Bitcoin transactions can be sufficiently irreversible in an hour or two."
131,transactions,Bitcoin P2P e-cash paper,2008-11-17 - Link,"A basic transaction is just what you see in the figure in section 2. A signature (of the buyer) satisfying the public key of the previous transaction, and a new public key (of the seller) that must be satisfied to spend it the next time."
132,transactions,Bitcoin P2P e-cash paper,2008-11-17 - Link,"If a merchant actually has a problem with theft, they can make the customer wait 2 minutes, or wait for something in e-mail, which many already do. If they really want to optimize, and it's a large download, they could cancel the download in the middle if the transaction comes back double-spent. If it's website access, typically it wouldn't be a big deal to let the customer have access for 5 minutes and then cut off access if it's rejected. Many such sites have a free trial anyway."
133,transactions,Bitcoin P2P e-cash paper,2009-01-09 - Link,"There are two ways to send money. If the recipient is online, you can enter their IP address and it will connect, get a new public key and send the transaction with comments. If the recipient is not online, it is possible to send to their Bitcoin address, which is a hash of their public key that they give you. They'll receive the transaction the next time they connect and get the block it's in. This method has the disadvantage that no comment information is sent, and a bit of privacy may be lost if the address is used multiple times, but it is a useful alternative if both users can't be online at the same time or the recipient can't receive incoming connections."
134,transactions,Bitcoin open source implementation of P2P currency,2009-02-11 - Link,"A digital coin contains the public key of its owner. To transfer it, the owner signs the coin together with the public key of the next owner. Anyone can check the signatures to verify the chain of ownership."
135,transactions,Re: Repost: How anonymous are bitcoins?,2009-11-25 - Link,"For greater privacy, it's best to use bitcoin addresses only once."
136,transactions,Re: URI-scheme for bitcoin,2010-02-24 - Link,That would be nice at point-of-sale.  The cash register displays a QR-code encoding a bitcoin address and amount on a screen and you photo it with your mobile.
137,transactions,Re: Transactions and Scripts: DUP HASH160 ... EQUALVERIFY CHECKSIG,2010-06-17 - Link,"The design supports a tremendous variety of possible transaction types that I designed years ago.  Escrow transactions, bonded contracts, third party arbitration, multi-party signature, etc.  If Bitcoin catches on in a big way, these are things we'll want to explore in the future, but they all had to be designed at the beginning to make sure they would be possible later."
138,transactions,"Re: I broke my wallet, sends never confirm now.",2010-09-30 - Link,"As you figured out, the root problem is we shouldn't be counting or spending transactions until they have at least 1 confirmation.  0/unconfirmed transactions are very much second class citizens.  At most, they are advice that something has been received, but counting them as balance or spending them is premature."
